---
version: '3.7'
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet:   172.1.0.1/24
volumes:
  pg_data:
    name: pg_data
    driver: local
services:
  ## cache
  memcached:
    container_name: memcached
    image: docker.nodevops.cn/web/memcached:alpine
    ports:
      - 11211:11211
    restart: always
  beanstalkd:
    container_name: beanstalkd
    image: docker.nodevops.cn/web/yd-beanstalkd:v1.0
    ports:
      - 11300:11300
    volumes:
      - /data/docker/beanstalkd:/var/lib/beanstalkd
    command: -z 655350 -b /var/lib/beanstalkd/ -F
    restart: always
  redis:
    container_name: redis
    image: docker.nodevops.cn/web/redis:alpine
    ports:
      - 6379:6379
    volumes:
      - ./redis/redis.conf:/etc/redis/redis.conf
    restart: always
  mongo:
    container_name: mongo
    image: docker.nodevops.cn/web/mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - ./mongo/mongod.conf:/etc/mongod.conf
      - /data/docker/mongo:/data/db
    #command: --serviceExecutor adaptive --config /etc/mongo/mongod.conf
    restart: always
  mongo-express:
    container_name: mongo-express
    image: docker.nodevops.cn/web/mongo-express
    ports:
      - 8082:8081
    restart: always
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
    volumes:
      - ./mongo/config.js:/node_modules/mongo-express/config.js
    links:
      - mongo
  apollo_config_uat:
    container_name: apollo_config_uat
    image: docker.nodevops.cn/web/apollo_config_dev:v0.0.7
    ports:
      - 10041:10001
      - 10042:10002
  kong:
    container_name: kong
    image: docker.nodevops.cn/web/kong:2.1_c7_yd
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444
    volumes:
      - /etc/hosts:/etc/hosts
      - ./kong/:/etc/kong/
      - /data/docker/kong/logs:/usr/local/kong/logs
    command: /etc/kong/script/start.sh
  konga:
    container_name: konga
    image: docker.nodevops.cn/web/konga:0.14.7_yd
    ports:
      - 1337:1337
    env_file:
      - ./konga/konga.env
  ## 容器管理
  portainer:
    container_name: portainer
    image: docker.nodevops.cn/web/portainer
    ports:
      - 9005:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:cached
      - /data/docker/portainer/:/data:cached
    restart: always
  postgres:
    container_name: postgres
    #image: harbor-jh.bs58i.baishancdnx.com/safe_biz/postgres:11_yd
    image: docker.nodevops.cn/web/postgres:11_yd
    ports:
        - 5432:5432
    volumes:
        - /etc/hosts:/etc/hosts
        - /data/docker/postgres/data:/var/lib/postgresql/data
    environment:
        POSTGRES_PASSWORD: dbadmin
  mysql:
    container_name: mysql
    image: docker.nodevops.cn/web/ydmysql:8.0.13
    ports:
      - 3306:3306
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
      - /data/docker/mysql:/var/lib/mysql/:rw
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      TZ: Asia/Shanghai
  php:
    container_name: php
    image: docker.nodevops.cn/web/php:7.2-yd
    volumes:
      - ./common/hosts:/etc/hosts
      - /data/www:/www/:rw
      - /data/www/tmp:/tmp/:rw
      - ./phpc7/script:/root/script
      - ./phpc7/php.d:/usr/local/php-7.2.33/etc/php.d:ro
      - ./phpc7/php.ini:/usr/local/php-7.2.33/etc/php.ini:ro
      - ./phpc7/php-fpm.conf:/usr/local/php-7.2.33/etc/php-fpm.conf:rw
      - ./phpc7/php-fpm.d:/usr/local/php-7.2.33/etc/php-fpm.d
      - /data/docker/php/log:/var/log/php:rw
    environment:
      APPLICATION_ENV: test
    command: /root/script/start_phpfpm.sh
    restart: always
  phpscript:
    container_name: phpscript
    image: docker.nodevops.cn/web/php:7.2-yd
    volumes:
      - ./common/hosts:/etc/hosts
      - /data/www:/www/:rw
      - /data/www/tmp:/tmp/:rw
      - ./phpc7/script:/root/script
      - ./phpc7/php.d:/usr/local/php-7.2.33/etc/php.d:ro
      - ./phpc7/php.ini:/usr/local/php-7.2.33/etc/php.ini:ro
      - ./phpc7/php-fpm.conf:/usr/local/php-7.2.33/etc/php-fpm.conf:rw
      - ./phpc7/php-fpm.d:/usr/local/php-7.2.33/etc/php-fpm.d
      - /data/docker/php/log:/var/log/php:rw
    environment:
      APPLICATION_ENV: test
    command: /root/script/crontab_processd.sh
    restart: always
    network_mode: "host"
  nginx:
    container_name: nginx
    image: docker.nodevops.cn/web/nginx:1.19-alpine-yd
    ports:
      - 80:80
      - 443:443
    volumes:
      - /data/www:/www/:rw
      - ./nginx/ssl:/ssl:rw
      - ./nginx/conf.d:/etc/nginx/conf.d/:rw
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /data/docker/nginx/log:/var/log/nginx/:rw
    environment:
      TZ: Asia/Shanghai
    restart: always
  apollo_config_pre:
    image: docker.nodevops.cn/web/apollo_build:0.1.0
    volumes:
      - ./apollo_pre/:/apollo/
    environment:
      CONFIG_DIR: /apollo/config
      CONFIG_SERVER_HOST: 172.16.100.200
      CONFIG_SERVER_PORT: 10061
      CONFIG_LOG_FOLDER: /opt/logs/100003173/
      CONFIG_DB_HOST: 172.16.100.242
      CONFIG_DB_PORT: 3306
      CONFIG_DB_NAME: apollo_config_pre
      CONFIG_DB_USER: apollo
      CONFIG_DB_PASSWORD: FNUyOTtcTMV_zi9m
    command: sh /apollo/config_start.sh
    restart: always
    network_mode: "host"
  apollo_admin_pre:
    image: docker.nodevops.cn/web/apollo_build:0.1.0
    volumes:
      - ./apollo_pre/:/apollo/
    environment:
      ADMIN_DIR: /apollo/admin
      ADMIN_SERVER_HOST: 172.16.100.200
      ADMIN_SERVER_PORT: 10062
      CONFIG_DB_HOST: 172.16.100.242
      CONFIG_DB_PORT: 3306
      CONFIG_DB_NAME: apollo_config_pre
      CONFIG_DB_USER: apollo
      CONFIG_DB_PASSWORD: FNUyOTtcTMV_zi9m
    command: sh /apollo/admin_start.sh
    restart: always
    network_mode: "host"
  service_report:
    container_name: service_report
    volumes:
      - /data/www/service_report/:/www/
      - /data/static/:/static/
    image: docker.nodevops.cn/web/report:0.2.0
    command: sh container_start.sh
    ##网络配置必须为host
    network_mode: "host"
